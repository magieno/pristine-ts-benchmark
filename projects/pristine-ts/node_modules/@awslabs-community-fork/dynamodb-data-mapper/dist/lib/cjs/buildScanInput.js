"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildScanInput = void 0;
const marshallStartKey_1 = require("./marshallStartKey");
const protocols_1 = require("./protocols");
const dynamodb_data_marshaller_1 = require("@awslabs-community-fork/dynamodb-data-marshaller");
const dynamodb_expressions_1 = require("@awslabs-community-fork/dynamodb-expressions");
/**
 * @internal
 */
function buildScanInput(valueConstructor, options = {}) {
    const { filter, indexName, pageSize, projection, readConsistency, segment, startKey, tableNamePrefix: prefix, totalSegments, } = options;
    const req = {
        TableName: protocols_1.getTableName(valueConstructor.prototype, prefix),
        Limit: pageSize,
        IndexName: indexName,
        Segment: segment,
        TotalSegments: totalSegments,
    };
    if (readConsistency === 'strong') {
        req.ConsistentRead = true;
    }
    const schema = protocols_1.getSchema(valueConstructor.prototype);
    const attributes = new dynamodb_expressions_1.ExpressionAttributes();
    if (filter) {
        req.FilterExpression = dynamodb_data_marshaller_1.marshallConditionExpression(filter, schema, attributes).expression;
    }
    if (projection) {
        req.ProjectionExpression = dynamodb_data_marshaller_1.marshallProjectionExpression(projection, schema, attributes).expression;
    }
    if (Object.keys(attributes.names).length > 0) {
        req.ExpressionAttributeNames = attributes.names;
    }
    if (Object.keys(attributes.values).length > 0) {
        req.ExpressionAttributeValues = attributes.values;
    }
    if (startKey) {
        req.ExclusiveStartKey = marshallStartKey_1.marshallStartKey(schema, startKey);
    }
    return req;
}
exports.buildScanInput = buildScanInput;
//# sourceMappingURL=buildScanInput.js.map