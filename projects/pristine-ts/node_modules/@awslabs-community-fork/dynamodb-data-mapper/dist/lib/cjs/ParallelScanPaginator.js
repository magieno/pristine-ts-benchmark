"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParallelScanPaginator = void 0;
const buildScanInput_1 = require("./buildScanInput");
const Paginator_1 = require("./Paginator");
const protocols_1 = require("./protocols");
const dynamodb_query_iterator_1 = require("@awslabs-community-fork/dynamodb-query-iterator");
const dynamodb_data_marshaller_1 = require("@awslabs-community-fork/dynamodb-data-marshaller");
/**
 * Iterates over each page of items returned by a parallel DynamoDB scan until
 * no more pages are available.
 */
class ParallelScanPaginator extends Paginator_1.Paginator {
    constructor(client, itemConstructor, segments, options = {}) {
        const schema = protocols_1.getSchema(itemConstructor.prototype);
        const input = Object.assign(Object.assign({}, buildScanInput_1.buildScanInput(itemConstructor, options)), { TotalSegments: segments, ExclusiveStartKey: undefined, Segment: undefined });
        let scanState;
        if (options.scanState) {
            scanState = options.scanState.map(({ initialized, lastEvaluatedKey: lastKey }) => ({
                initialized,
                LastEvaluatedKey: lastKey
                    ? dynamodb_data_marshaller_1.marshallKey(schema, lastKey, options.indexName)
                    : undefined
            }));
        }
        const paginator = new dynamodb_query_iterator_1.ParallelScanPaginator(client, input, scanState);
        super(paginator, itemConstructor);
        this._paginator = paginator;
        this._ctor = itemConstructor;
        this._schema = schema;
    }
    /**
     * The `lastEvaluatedKey` attribute is not available on parallel scans. Use
     * {@link scanState} instead.
     */
    get lastEvaluatedKey() {
        return undefined;
    }
    /**
     * A snapshot of the current state of a parallel scan. May be used to resume
     * a parallel scan with a separate paginator.
     */
    get scanState() {
        return this._paginator.scanState.map(({ initialized, LastEvaluatedKey }) => ({
            initialized,
            lastEvaluatedKey: LastEvaluatedKey
                ? dynamodb_data_marshaller_1.unmarshallItem(this._schema, LastEvaluatedKey, this._ctor)
                : undefined
        }));
    }
}
exports.ParallelScanPaginator = ParallelScanPaginator;
//# sourceMappingURL=ParallelScanPaginator.js.map