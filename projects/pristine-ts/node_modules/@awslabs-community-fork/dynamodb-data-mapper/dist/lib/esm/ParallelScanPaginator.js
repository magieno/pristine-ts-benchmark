import { buildScanInput } from './buildScanInput';
import { Paginator } from './Paginator';
import { getSchema } from './protocols';
import { ParallelScanPaginator as BasePaginator, } from '@awslabs-community-fork/dynamodb-query-iterator';
import { marshallKey, unmarshallItem, } from '@awslabs-community-fork/dynamodb-data-marshaller';
/**
 * Iterates over each page of items returned by a parallel DynamoDB scan until
 * no more pages are available.
 */
export class ParallelScanPaginator extends Paginator {
    constructor(client, itemConstructor, segments, options = {}) {
        const schema = getSchema(itemConstructor.prototype);
        const input = Object.assign(Object.assign({}, buildScanInput(itemConstructor, options)), { TotalSegments: segments, ExclusiveStartKey: undefined, Segment: undefined });
        let scanState;
        if (options.scanState) {
            scanState = options.scanState.map(({ initialized, lastEvaluatedKey: lastKey }) => ({
                initialized,
                LastEvaluatedKey: lastKey
                    ? marshallKey(schema, lastKey, options.indexName)
                    : undefined
            }));
        }
        const paginator = new BasePaginator(client, input, scanState);
        super(paginator, itemConstructor);
        this._paginator = paginator;
        this._ctor = itemConstructor;
        this._schema = schema;
    }
    /**
     * The `lastEvaluatedKey` attribute is not available on parallel scans. Use
     * {@link scanState} instead.
     */
    get lastEvaluatedKey() {
        return undefined;
    }
    /**
     * A snapshot of the current state of a parallel scan. May be used to resume
     * a parallel scan with a separate paginator.
     */
    get scanState() {
        return this._paginator.scanState.map(({ initialized, LastEvaluatedKey }) => ({
            initialized,
            lastEvaluatedKey: LastEvaluatedKey
                ? unmarshallItem(this._schema, LastEvaluatedKey, this._ctor)
                : undefined
        }));
    }
}
//# sourceMappingURL=ParallelScanPaginator.js.map