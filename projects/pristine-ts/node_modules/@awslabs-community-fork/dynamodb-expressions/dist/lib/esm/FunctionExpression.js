import { AttributePath } from "./AttributePath";
const FUNCTION_EXPRESSION_TAG = 'AmazonDynamoDbFunctionExpression';
const EXPECTED_TOSTRING = `[object ${FUNCTION_EXPRESSION_TAG}]`;
/**
 * An object representing a DynamoDB function expression.
 */
export class FunctionExpression {
    constructor(name, ...args) {
        this.name = name;
        this[Symbol.toStringTag] = FUNCTION_EXPRESSION_TAG;
        this.args = args;
    }
    serialize(attributes) {
        const expressionSafeArgs = this.args.map(arg => {
            if (AttributePath.isAttributePath(arg)) {
                return attributes.addName(arg);
            }
            else if (FunctionExpression.isFunctionExpression(arg)) {
                return arg.serialize(attributes);
            }
            return attributes.addValue(arg);
        });
        return `${this.name}(${expressionSafeArgs.join(', ')})`;
    }
    /**
     * Evaluate whether the provided value is a FunctionExpression object.
     */
    static isFunctionExpression(arg) {
        return arg instanceof FunctionExpression
            || Object.prototype.toString.call(arg) === EXPECTED_TOSTRING;
    }
}
//# sourceMappingURL=FunctionExpression.js.map