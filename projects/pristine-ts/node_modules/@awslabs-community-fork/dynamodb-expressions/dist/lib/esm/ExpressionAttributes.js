import { AttributePath } from "./AttributePath";
import { AttributeValue as AttributeValueClass } from './AttributeValue';
import { Marshaller } from "@awslabs-community-fork/dynamodb-auto-marshaller";
/**
 * An object that manages expression attribute name and value substitution.
 */
export class ExpressionAttributes {
    constructor() {
        this.names = {};
        this.values = {};
        this.marshaller = new Marshaller();
        this.nameMap = {};
        this._ctr = 0;
    }
    /**
     * Add an attribute path to this substitution context.
     *
     * @returns The substitution value to use in the expression. The same
     * attribute name will always be converted to the same substitution value
     * when supplied to the same ExpressionAttributes object multiple times.
     */
    addName(path) {
        if (AttributePath.isAttributePath(path)) {
            let escapedPath = '';
            for (const element of path.elements) {
                if (element.type === 'AttributeName') {
                    escapedPath += `.${this.addAttributeName(element.name)}`;
                }
                else {
                    escapedPath += `[${element.index}]`;
                }
            }
            return escapedPath.substring(1);
        }
        return this.addName(new AttributePath(path));
    }
    /**
     * Add an attribute value to this substitution context.
     *
     * @returns The substitution value to use in the expression.
     */
    addValue(value) {
        const modeledAttrValue = AttributeValueClass.isAttributeValue(value)
            ? value.marshalled
            : this.marshaller.marshallValue(value);
        const substitution = `:val${this._ctr++}`;
        this.values[substitution] = modeledAttrValue;
        return substitution;
    }
    addAttributeName(attributeName) {
        if (!(attributeName in this.nameMap)) {
            this.nameMap[attributeName] = `#attr${this._ctr++}`;
            this.names[this.nameMap[attributeName]] = attributeName;
        }
        return this.nameMap[attributeName];
    }
}
//# sourceMappingURL=ExpressionAttributes.js.map