"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSchemaName = exports.toSchemaName = void 0;
const dynamodb_expressions_1 = require("@awslabs-community-fork/dynamodb-expressions");
function toSchemaName(path, schema) {
    if (typeof path === 'string') {
        path = new dynamodb_expressions_1.AttributePath(path);
    }
    const elements = path.elements.map(el => (Object.assign({}, el)));
    let cursor = {
        type: 'Document',
        members: schema
    };
    for (const element of elements) {
        if (element.type === 'AttributeName' &&
            cursor &&
            cursor.type === 'Document') {
            const { name } = element;
            element.name = getSchemaName(name, cursor.members);
            cursor = cursor.members[name];
        }
        else if (element.type === 'ListIndex' &&
            cursor &&
            cursor.type === 'List') {
            cursor = cursor.memberType;
        }
        else {
            break;
        }
    }
    return new dynamodb_expressions_1.AttributePath(elements);
}
exports.toSchemaName = toSchemaName;
function getSchemaName(propertyName, schema) {
    const fieldSchema = schema[propertyName];
    if (fieldSchema) {
        const { attributeName = propertyName } = fieldSchema;
        return attributeName;
    }
    return propertyName;
}
exports.getSchemaName = getSchemaName;
//# sourceMappingURL=toSchemaName.js.map