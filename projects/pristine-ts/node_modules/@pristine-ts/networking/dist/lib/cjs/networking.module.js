"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkingModule = void 0;
const networking_module_keyname_1 = require("./networking.module.keyname");
const security_1 = require("@pristine-ts/security");
const telemetry_1 = require("@pristine-ts/telemetry");
const configuration_1 = require("@pristine-ts/configuration");
__exportStar(require("./decorators/decorators"), exports);
__exportStar(require("./errors/errors"), exports);
__exportStar(require("./handlers/handlers"), exports);
__exportStar(require("./interceptors/interceptors"), exports);
__exportStar(require("./interfaces/interfaces"), exports);
__exportStar(require("./mappers/mappers"), exports);
__exportStar(require("./models/models"), exports);
__exportStar(require("./nodes/nodes"), exports);
__exportStar(require("./resolvers/resolvers"), exports);
__exportStar(require("./utils/utils"), exports);
__exportStar(require("./router"), exports);
exports.NetworkingModule = {
    keyname: networking_module_keyname_1.NetworkingModuleKeyname,
    importModules: [
        security_1.SecurityModule,
        telemetry_1.TelemetryModule,
    ],
    configurationDefinitions: [
        /**
         * Whether or not the request body converter interceptor is active.
         */
        {
            parameterName: networking_module_keyname_1.NetworkingModuleKeyname + ".requestBodyConverter.isActive",
            isRequired: false,
            defaultValue: true,
            defaultResolvers: [
                new configuration_1.BooleanResolver(new configuration_1.EnvironmentVariableResolver("PRISTINE_NETWORKING_REQUEST_BODY_CONVERTER_IS_ACTIVE")),
            ],
        },
        /**
         * Whether or not the default content type response header interceptor is active.
         */
        {
            parameterName: networking_module_keyname_1.NetworkingModuleKeyname + ".defaultContentTypeResponseHeader.isActive",
            isRequired: false,
            defaultValue: true,
            defaultResolvers: [
                new configuration_1.BooleanResolver(new configuration_1.EnvironmentVariableResolver("PRISTINE_NETWORKING_DEFAULT_CONTENT_TYPE_RESPONSE_HEADER_IS_ACTIVE")),
            ],
        },
        /**
         * The default Content-Type response header to set on responses that do not already have Content-Types.
         */
        {
            parameterName: networking_module_keyname_1.NetworkingModuleKeyname + ".defaultContentTypeResponseHeader",
            isRequired: false,
            defaultValue: "application/json",
            defaultResolvers: [
                new configuration_1.EnvironmentVariableResolver("PRISTINE_NETWORKING_DEFAULT_CONTENT_TYPE_RESPONSE_HEADER"),
            ],
        }
    ],
};
//# sourceMappingURL=networking.module.js.map