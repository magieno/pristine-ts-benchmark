import { LogHandlerInterface } from "@pristine-ts/logging";
import { Request } from "@pristine-ts/common";
import { RequestInterceptorInterface } from "../interfaces/request-interceptor.interface";
/**
 * The Request Body Converter Interceptor intercepts the request and parses the body based on the Content-tTpe header.
 * It is tagged as a RequestInterceptor so it can be automatically injected with the all the other RequestInterceptor.
 */
export declare class RequestBodyConverterInterceptor implements RequestInterceptorInterface {
    private readonly isActive;
    private readonly logHandler;
    /**
     * The Request Body Converter Interceptor intercepts the request and parses the body based on the Content-Type header.
     * It is tagged as a RequestInterceptor so it can be automatically injected with the all the other RequestInterceptor.
     * @param isActive Whether or not this interceptor is active.
     * @param logHandler The log handler to output logs.
     */
    constructor(isActive: boolean, logHandler: LogHandlerInterface);
    /**
     * Intercepts the request and parses the body based on it's Content-Type header.
     * @param request The request to intercept.
     */
    interceptRequest(request: Request): Promise<Request>;
}
