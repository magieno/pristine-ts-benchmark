import { Event, EventHandlerInterface, EventResponse } from "@pristine-ts/core";
import { DependencyContainer } from "tsyringe";
import { RouterInterface } from "../interfaces/router.interface";
import { Request, Response } from "@pristine-ts/common";
import { TracingManagerInterface } from "@pristine-ts/telemetry";
import { LogHandlerInterface } from "@pristine-ts/logging";
export declare class RequestEventHandler implements EventHandlerInterface<Request, Response> {
    private readonly router;
    private readonly logHandler;
    private readonly tracingManager;
    private readonly dependencyContainer;
    priority: number;
    constructor(router: RouterInterface, logHandler: LogHandlerInterface, tracingManager: TracingManagerInterface, dependencyContainer: DependencyContainer);
    supports<T>(event: Event<T>): boolean;
    handle(event: Event<Request>): Promise<EventResponse<Request, Response>>;
}
