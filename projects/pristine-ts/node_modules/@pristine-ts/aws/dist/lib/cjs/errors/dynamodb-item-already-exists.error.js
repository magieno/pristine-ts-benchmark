"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DynamodbItemAlreadyExistsError = void 0;
const dynamodb_error_1 = require("./dynamodb.error");
/**
 * This Error is for when an item already exists in DynamoDB.
 */
class DynamodbItemAlreadyExistsError extends dynamodb_error_1.DynamodbError {
    /**
     * This Error is for when an item already exists in DynamoDB.
     * @param originalError The original error that was caught.
     * @param tableName The name of the DynamoDB table where the error happened.
     * @param primaryKey The primary key of the item that caused the error.
     */
    constructor(originalError, tableName, primaryKey) {
        super("The item already exists in dynamodb.", originalError, tableName);
        // Set the prototype explicitly.
        // As specified in the documentation in TypeScript
        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(this, DynamodbItemAlreadyExistsError.prototype);
    }
}
exports.DynamodbItemAlreadyExistsError = DynamodbItemAlreadyExistsError;
//# sourceMappingURL=dynamodb-item-already-exists.error.js.map