import { ResolverInterface } from "@pristine-ts/common";
/**
 * The resolver to resolve a parameter from AWS SSM.
 * Extends the resolver interface with the generic as a string
 */
export declare class SSMResolver implements ResolverInterface<string> {
    private readonly ssmParameterName;
    private readonly region;
    private readonly isSecure;
    /**
     * The resolver to resolve a parameter from AWS SSM
     * @param ssmParameterName The name of the SSM parameter, or the resolver to get that name.
     * @param region The AWS region in which the SSM parameter needs to be resolved from.
     * @param isSecure If the parameter is secure or not.
     */
    constructor(ssmParameterName: string | ResolverInterface<string>, region: string | ResolverInterface<string>, isSecure?: boolean);
    /**
     * Resolves a parameter from AWS SSM.
     */
    resolve(): Promise<string>;
    /**
     * Resolve the string value of an argument.
     * @param value The value to be resolved (either already a string or another resolver).
     * @private
     */
    private resolveArgument;
}
