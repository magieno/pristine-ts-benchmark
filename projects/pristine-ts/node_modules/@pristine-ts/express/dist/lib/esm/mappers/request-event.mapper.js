var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Event, ExecutionContextKeynameEnum } from "@pristine-ts/core";
import { moduleScoped, Response, ServiceDefinitionTagEnum, tag } from "@pristine-ts/common";
import { ExpressModuleKeyname } from "../express.module.keyname";
import { injectable } from "tsyringe";
import { RequestMapper } from "./request.mapper";
import { ResponseMapper } from "./response.mapper";
let RequestEventMapper = class RequestEventMapper {
    constructor(requestMapper, responseMapper) {
        this.requestMapper = requestMapper;
        this.responseMapper = responseMapper;
    }
    supportsMapping(rawEvent, executionContext) {
        // todo be more intelligent and add more conditions
        return executionContext.keyname === ExecutionContextKeynameEnum.Express;
    }
    map(rawEvent, executionContext) {
        return {
            executionOrder: "sequential",
            events: [
                new Event("EXPRESS_REQUEST", this.requestMapper.map(rawEvent))
            ]
        };
    }
    reverseMap(eventResponse, response, executionContext) {
        return this.responseMapper.reverseMap(response, executionContext.context.res);
    }
    supportsReverseMapping(eventResponse, response, executionContext) {
        return executionContext.keyname === ExecutionContextKeynameEnum.Express && response instanceof Response;
    }
};
RequestEventMapper = __decorate([
    moduleScoped(ExpressModuleKeyname),
    tag(ServiceDefinitionTagEnum.EventMapper),
    injectable(),
    __metadata("design:paramtypes", [RequestMapper, ResponseMapper])
], RequestEventMapper);
export { RequestEventMapper };
//# sourceMappingURL=request-event.mapper.js.map