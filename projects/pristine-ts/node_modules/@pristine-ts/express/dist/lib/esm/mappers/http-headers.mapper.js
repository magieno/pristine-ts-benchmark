var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { injectable } from "tsyringe";
let HttpHeadersMapper = class HttpHeadersMapper {
    /**
     * Maps the headers of an express http request to the headers of a Pristine request.
     * @param incomingHttpHeaders
     */
    map(incomingHttpHeaders) {
        const headers = {};
        for (const headersKey in incomingHttpHeaders) {
            if (incomingHttpHeaders.hasOwnProperty(headersKey) === false) {
                continue;
            }
            const incomingHttpHeader = incomingHttpHeaders[headersKey];
            if (incomingHttpHeader === undefined) {
                continue;
            }
            else if (Array.isArray(incomingHttpHeader)) {
                continue;
            }
            headers[headersKey] = incomingHttpHeaders[headersKey];
        }
        return headers;
    }
};
HttpHeadersMapper = __decorate([
    injectable()
], HttpHeadersMapper);
export { HttpHeadersMapper };
//# sourceMappingURL=http-headers.mapper.js.map