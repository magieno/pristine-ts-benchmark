import { Trace } from "./trace.model";
import { TracingManagerInterface } from "../interfaces/tracing-manager.interface";
/**
 * This model represents a span.
 */
export declare class Span {
    keyname: string;
    /**
     * The unique id of the span.
     */
    id: string;
    /**
     * The tracing manager.
     */
    tracingManager?: TracingManagerInterface;
    /**
     * The trace the span is attached to.
     */
    trace?: Trace;
    /**
     * The timestamp in milliseconds at which the span was started.
     */
    startDate: number;
    /**
     * The timestamp in milliseconds at which the span was ended.
     */
    endDate?: number;
    /**
     * The parent span.
     */
    parentSpan?: Span;
    /**
     * The children spans.
     */
    children: Span[];
    /**
     * The context associated with the span.
     */
    context: {
        [key: string]: string;
    };
    /**
     * Whether or not the span is in progress, meaning it has not ended.
     */
    inProgress: boolean;
    /**
     * This model represents a span.
     * @param keyname The keyname of the span.
     * @param id The unique id of the span.
     * @param context The context to associate with the span.
     */
    constructor(keyname: string, id?: string, context?: {
        [key: string]: string;
    });
    /**
     * This method returns the duration of the span in milliseconds.
     */
    getDuration(): number;
    /**
     * This method ends the span.
     */
    end(): void;
    /**
     * This method sets the trace for the span and all of its children.
     * @param trace The trace the span should be attached to.
     */
    setTrace(trace: Trace): void;
    /**
     * This method adds a child span to the current span. It only adds it if it's not already part of the children.
     * @param span The span to add as a child.
     */
    addChild(span: Span): void;
}
